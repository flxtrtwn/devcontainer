# Top-level configuration for the API gateway server

include api_backends.conf;
include api_keys.conf;
js_import oauth2.js; # Location of JavaScript code

server {
    access_log /var/log/nginx/api_access.log main;

    server_name ${DOMAIN_NAME};

    # API definitions, one per file
    include api_conf.d/*.conf;

    # Error responses
    error_page 404 = @400;         # Treat invalid paths as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to client
    include api_json_errors.conf;  # API client-friendly JSON errors
    default_type application/json; # If no content-type, assume JSON

    location = /_validate_apikey {
        internal;

        if ($$http_apikey = "") {
            return 401;
        }
        if ($$api_client_name = "") {
            return 403;
        }

        return 204;
    }

    location = /_oauth2_token_introspection {
        internal;
        js_content oauth2.introspectAccessToken;
    }

        location /_oauth2_send_request {
        internal;
        proxy_method      POST;
        proxy_set_header  Authorization "Bearer SecretForOAuthServer";
        proxy_set_header  Content-Type "application/x-www-form-urlencoded";
        proxy_set_body    "token=$http_apikey&token_hint=access_token";
        proxy_pass        https://idp.example.com/oauth/token/introspect;
        # proxy_cache           token_responses; # Enable caching
        # proxy_cache_key       $http_apikey;    # Cache for each access token
        # proxy_cache_lock      on;              # Duplicate tokens must wait
        # proxy_cache_valid     200 10s;         # How long to use each response
        # proxy_ignore_headers  Cache-Control Expires Set-Cookie; TODO
    }
}
